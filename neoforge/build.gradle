plugins {
    id 'multiloader-loader'
    id 'net.neoforged.gradle.userdev' version '7.0.142'
}

base {
    archivesName = "${mod_name}-neoforge-${minecraft_version}"
}

version = "${version}${buildnumber}"

// Automatically enable neoforge AccessTransformers if the file exists
// This location is hardcoded in FML and can not be changed.
// https://github.com/neoforged/FancyModLoader/blob/a952595eaaddd571fbc53f43847680b00894e0c1/loader/src/main/java/net/neoforged/fml/loading/moddiscovery/ModFile.java#L118
if (file('src/main/resources/META-INF/accesstransformer.cfg').exists()) {
    minecraft.accessTransformers.file file('src/main/resources/META-INF/accesstransformer.cfg')
}

runs {
    configureEach {
        modSource project.sourceSets.main
    }
    client {
        systemProperty 'neoforge.enabledGameTestNamespaces', project.mod_id
    }
    server {
        systemProperty 'neoforge.enabledGameTestNamespaces', project.mod_id
        programArgument '--nogui'
    }

    gameTestServer {
        systemProperty 'neoforge.enabledGameTestNamespaces', project.mod_id
    }

    data {
        programArguments.addAll '--mod', project.mod_id, '--all', '--output', file('src/generated/resources/').getAbsolutePath(), '--existing', file('src/main/resources/').getAbsolutePath()
    }
}

sourceSets.main.resources { srcDir 'src/generated/resources' }

jarJar.enable()
dependencies {
    implementation "net.neoforged:neoforge:${neoforge_version}"

    implementation "mysticdrew:common-networking-neoforge:${common_networking}-${minecraft_version}"		
    jarJar group: 'mysticdrew', name: 'common-networking-neoforge', version: '[1.0.10, 5.0.0)'
}

tasks.jarJar.configure {
    archiveClassifier.set("")
}

tasks.named("build").configure {
    dependsOn("jarJar")
}